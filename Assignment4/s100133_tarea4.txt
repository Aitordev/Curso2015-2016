1-Get all the Classes

SELECT ?subject WHERE { 
 ?subject a rdfs:Class. 
}

2-Get all the subclasses of the class Establishment

PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?subject WHERE { 
 ?subject rdfs:subClassOf pr:Establishment. 
}

3-Get all instances of the class City

PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?subject WHERE { 
 ?subject a pr:City. 
}

4-Get the number of inhabitants of Santiago de Compostela

PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?object WHERE { 
 pr:Santiago_de_Compostela pr:hasInhabitantNumber ?object. 
}

5-Get the number of inhabitants of Santiago de Compostela and Arzua

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
SELECT DISTINCT ?x ?y WHERE {
  { :Santiago_de_Compostela :hasInhabitantNumber ?x . :Arzua :hasInhabitantNumber ?y }
  } 

6-Get all places, together with the number of inhabitants, ordered by the place name (ascending)

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
SELECT DISTINCT ?x ?y WHERE{ 
  ?x :hasInhabitantNumber ?y . ?x rdfs:label ?name 
    } 
    ORDER BY ?name ASC(?x) 

7-Get all instances of  Locality together with their number of inhabitants (if this information exists)

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
SELECT DISTINCT ?x ?y WHERE {
  ?x a :Locality . ?x :hasInhabitantNumber ?y
  } 

8-Get all places with more than 200.000 inhabitants

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
SELECT DISTINCT ?x WHERE {
  ?x :hasInhabitantNumber ?y . FILTER (xsd:integer(?y) > 200000) 
  }

9-Get postal address data for Pazo_Breogan (street, number, locality, province)

PREFIX : <http://GP-onto.fi.upm.es/exercise2#> 
SELECT DISTINCT ?w ?x ?y ?z WHERE {
:Pazo_Breogan :hasAddress ?a . ?a :hasStreet ?w . ?a :hasNumber ?x . :Pazo_Breogan :isPlacedIn ?y . ?y :inProvince ?z 
  } 

10-Get all subclasses of class Location

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
SELECT DISTINCT ?x WHERE {
  ?x rdfs:subClassOf :Location
    } 

11-Get all instances of class Locality

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x WHERE {
  ?x a :Locality 
    } 

12-Describe the resource with rdfs:label "Madrid”

DESCRIBE ?x WHERE {
  ?x rdfs:label "Madrid" 
    }

13-Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
CONSTRUCT {
  ?x :isIn ?y 
    } WHERE {
   ?x :isPlacedIn ?z . ?z :inProvince ?y 
  } 

14-Check whether there is any instance of Town

PREFIX : <http://GP-onto.fi.upm.es/exercise2#>
ASK WHERE { 
  ?x a :Town 
  }
